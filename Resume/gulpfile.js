/// <binding BeforeBuild='before-build' AfterBuild='after-build' />
/*
This file in the main entry point for defining Gulp tasks and using Gulp plug-ins.
Click here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007
*/

var gulp = require('gulp');
var bower = require('gulp-bower');
var del = require('del');
var fs = require('fs');
var request = require('request');
var less = require('gulp-less');
var path = require('path');
var minifycss = require('gulp-minify-css');
var sourcemaps = require('gulp-sourcemaps');
var rename = require('gulp-rename');
var concat = require('gulp-concat');
var watch = require('gulp-watch');
var uglify = require('gulp-uglify');

var mainSources = [
    'Content/lib/jquery/dist/jquery.js',
    'Content/lib/jquery.easing/jquery.easing.js',
    'Content/lib/bootstrap/dist/js/bootstrap.js'
];

var appSources = mainSources.concat([
    'Content/Scripts/app/resume.js'
]);

var appSource = 'Content/Scripts/app/app.js';

gulp.task('before-build', ['install-bower-packages', 'minify-css', 'wget'], function () {
});

gulp.task('after-build', ['minify-app-javascript'], function () {
});

gulp.task('wget', function () {
    return request('https://eternallybored.org/misc/wget/wget.exe')
        .pipe(fs.createWriteStream('bin/wget.exe'));
});

gulp.task('clean', function () {
    return del(['Content/lib/**/*', '!Content/lib/typings', '!Content/lib/typings/**/*']);
});

//the task to install bower packages
gulp.task('install-bower-packages', ['clean'], function () {
    return bower()
      .pipe(gulp.dest('Content/lib/'))
});

//the task to minify the css file generated by the less task
gulp.task('minify-css', ['compile-less'], function () {
    return gulp.src('./Content/Styles/theme.css')
        .pipe(minifycss())
        .pipe(rename('theme.min.css'))
        .pipe(gulp.dest('./Content/Styles/'));;
});

//the task to compile less files
gulp.task('compile-less', function () {
    return gulp.src('./Content/Styles/theme.less')
        .pipe(sourcemaps.init())
        .pipe(less({ paths: [path.join(__dirname, 'less', 'includes')] }))
        .pipe(sourcemaps.write('./'))
        .pipe(gulp.dest('./Content/Styles/'));
});

//the task to concat the javascript for the main area
gulp.task('concat-app-javascript', function () {
    return gulp.src(appSources, { base: 'Content/' })
        .pipe(sourcemaps.init({ loadMaps: true }))
        .pipe(concat('app.js'))
        .pipe(sourcemaps.write('./'))
        .pipe(gulp.dest('Content/Scripts/app'));
});

//the task to minify the javascript for the main area
gulp.task('minify-app-javascript', ['concat-app-javascript'], function () {
    return gulp.src(appSource)
         .pipe(uglify())
         .pipe(rename("app.min.js"))
         .pipe(gulp.dest('Content/Scripts/app'));
});